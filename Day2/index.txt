The if statement

-> Use the if statement to specify a block of JavaScript code to be executed if a condition is true.

Syntax
if (condition) {
  //  block of code to be executed if the condition is true
}

The if else statement

-> Use the else statement to specify a block of code to be executed if the condition is false.

Syntax
if (condition) {
  //  block of code to be executed if the condition is true
} else {
  //  block of code to be executed if the condition is false
}

The else if Statement
Use the else if statement to specify a new condition if the first condition is false.

Syntax
if (condition1) {
  //  block of code to be executed if condition1 is true
} else if (condition2) {
  //  block of code to be executed if the condition1 is false and condition2 is true
} else {
  //  block of code to be executed if the condition1 is false and condition2 is false
}

Switch Statement

-> Use the switch statement to select one of many code blocks to be executed.

Syntax
switch(expression) {
  case x:
    // code block
    break;
  case y:
    // code block
    break;
  default:
    // code block
}
This is how it works:

-> The switch expression is evaluated once.
-> The value of the expression is compared with the values of each case.
-> If there is a match, the associated block of code is executed.
-> If there is no match, the default code block is executed.

The break Keyword

-> When JavaScript reaches a break keyword, it breaks out of the switch block.

-> This will stop the execution inside the switch block.

The default Keyword

-> The default keyword specifies the code to run if there is no case match.

Common Code Blocks

Sometimes we will want different switch cases to use the same code.

The While Loop

-> The while loop loops through a block of code as long as a specified condition is true.

Syntax
while (condition) {
  // code block to be executed
}

The Do While loop
-> This loop will execute the code block once, before checking if the condition is true, then it will repeat the loop as long as the condition is true.
-> The loop will always be executed at least once, even if the condition is false, because the code block is executed before the condition is tested.
Syntax
do {
  // code block to be executed
}
while (condition);

The For Loop

The for loop has the following syntax:

for (statement 1; statement 2; statement 3) {
  // code block to be executed
}
Statement 1 is executed (one time) before the execution of the code block.

Statement 2 defines the condition for executing the code block.

Statement 3 is executed (every time) after the code block has been executed.

The For In Loop
-> The JavaScript for in statement loops through the properties of an Object.

Syntax
for (key in object) {
  // code block to be executed
}

Function Definition

-> JavaScript functions are defined with the function keyword.